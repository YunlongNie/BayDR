verNo=2.0
system(paste("rm -rf",packageName))
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
# add useDynLib(BayDR) at the end of NAMESPACE
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
packageName="BayDR"
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.1
system(paste("rm -rf",packageName))
#  delete the original bayDR folder
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
filenames = list.files("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import/")
system(paste("R CMD check",filenames[grep(as.character(verNo),filenames)]))
packageName="BayDR"
verNo=2.1
system(paste("rm -rf",packageName))
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
filenames = list.files("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import/")
system(paste("R CMD install",filenames[grep(as.character(verNo),filenames)]))
detach("package:BayDR", unload=TRUE)
library("BayDR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
library(BayDR)
data(sampleDat)
Y=sample.dataset$Y
X=sample.dataset$X
C=sample.dataset$C
bay.est.new(Y,X,C)
bay.est.old(Y,X,C)
sat.est.new(Y,X,C)
sat.est.old(Y,X,C)
is.NaN(NULL)
is.null(NULL)
packageName="BayDR"
verNo=2.1
system(paste("rm -rf",packageName))
#  delete the original bayDR folder
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
filenames = list.files("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import/")
system(paste("R CMD install",filenames[grep(as.character(verNo),filenames)]))
detach("package:BayDR", unload=TRUE)
library("BayDR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
temp=sample.empty(N=(0.5/0.0001)^2,colnumber=12)
sample(2,ncol*N,replace=TRUE)
N=(0.5/0.0001)^2
ncol=12
temp=sample(2,ncol*N,replace=TRUE)
packageName="BayDR"
verNo=2.1
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("rm -rf",packageName))
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
system(paste("R CMD check",filenames[grep(as.character(verNo),filenames)]))
Rcpp::sourceCpp('CauEst2.cpp')
mc.error=0.0001
CauEstC2(N=(0.5/mc.error)^2,phi0=0.2,phi1=1,phi2=1,lambda1=1,lambda2=0,r=6,K=2,mean34=0.2)
CauEstC2(N=(0.5/mc.error)^2,phi0=0.2,phi1=1,phi2=1,lambda1=1,lambda2=0,r=6,K=2,mean34=0.2)
CauEstC
library("BayDR", lib.loc="/Library/Frameworks/R.framework/Versions/2.15/Resources/library")
CausalEst
Rcpp::sourceCpp('CauEst2.cpp')
Rcpp::sourceCpp('CauEst2.cpp')
Rcpp::sourceCpp('CauEst2.cpp')
Rcpp::sourceCpp('sampleCpp.cpp')
Rcpp::sourceCpp('sampleCpp.cpp')
sampleC(1:10,10,FALSE)
sampleC(1:10,20,FALSE)
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
CausalEst <- function(K=2,r=6,rho=0.3,gamma0=0.2,gamma1=1,gamma2=1,lambda1=1,lambda2=0,mc.error=0.001) {
Z <- rnorm(10000,0,1)
Mean34 <- mean((1-pnorm((rho^(-1)-1)^(-0.5)*Z,0,1))^2)
Causal <-CauEstC(N=(0.5/mc.error)^2,gamma0=gamma0,gamma1=gamma1,gamma2=gamma2,lambda1=lambda1,lambda2=lambda2,r=r,K=K,mean34=Mean34)
Causal
}
CausalEst()
Causal <-CauEstC(mc.error,gamma0=gamma0,gamma1=gamma1,gamma2=gamma2,lambda1=lambda1,lambda2=lambda2,r=r,K=K,mean34=Mean34)
CausalEst <- function(K=2,r=6,rho=0.3,gamma0=0.2,gamma1=1,gamma2=1,lambda1=1,lambda2=0,mc.error=0.001) {
Z <- rnorm(10000,0,1)
Mean34 <- mean((1-pnorm((rho^(-1)-1)^(-0.5)*Z,0,1))^2)
Causal <-CauEstC(mc.error,gamma0=gamma0,gamma1=gamma1,gamma2=gamma2,lambda1=lambda1,lambda2=lambda2,r=r,K=K,mean34=Mean34)
Causal
}
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst()
CausalEst <- function(K=2,r=6,rho=0.3,gamma0=0.2,gamma1=1,gamma2=1,lambda1=1,lambda2=0,mc.error=0.0001) {
Z <- rnorm(10000,0,1)
Mean34 <- mean((1-pnorm((rho^(-1)-1)^(-0.5)*Z,0,1))^2)
Causal <-CauEstC(mc.error,gamma0=gamma0,gamma1=gamma1,gamma2=gamma2,lambda1=lambda1,lambda2=lambda2,r=r,K=K,mean34=Mean34)
Causal
}
CausalEst()
CausalEst(K=8)
setwd("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import")
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
filenames = list.files("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import/")
system(paste("R CMD check",filenames[grep(as.character(verNo),filenames)]))
cat("useDynLib(",packageName,")",sep="")
dev.off()
cat("useDynLib(",packageName,")",sep="")
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
# add useDynLib(BayDR) at the end of NAMESPACE
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
filenames = list.files("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import/")
system(paste("R CMD check",filenames[grep(as.character(verNo),filenames)]))
system(paste("R CMD build",packageName))
filenames = list.files("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import/")
system(paste("R CMD check",filenames[grep(as.character(verNo),filenames)]))
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst2.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
Rcpp::sourceCpp('Cpp/CauEst.cpp')
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
#  delete the original bayDR folder
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
RcppArmadillo.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
system(paste("rm -rf",packageName))
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
RcppArmadillo.package.skeleton(name=packageName)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
#  delete the original bayDR folder
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
#  delete the original bayDR folder
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
# add useDynLib(BayDR) at the end of NAMESPACE
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
RcppArmadillo.package.skeleton(names=packageNames)
RcppArmadillo.package.skeleton(names=packageName)
packageName
dev.off()
packageName
require(BayDR)
dat=GenDat2(n=1000,K=5,r=6)
Y=dat$Y
X=dat$X
C=dat[,1:30]
UqC=as.matrix(dcom(Y,X,C)$UqC)
seq=0:29
coef = rep(0.2,32)
Rcpp::sourceCpp('sampleEs2.cpp')
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq)
out
Rcpp::sourceCpp('sampleEs2.cpp')
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq)
ouot
out
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq)
out
Rcpp::sourceCpp('sampleEs2.cpp')
Rcpp::sourceCpp('sampleEs2.cpp')
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq)
out
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq)
out
out=sampleEmpty2(mcerror=0.0001,UqC=UqC,coef=coef,seq=seq)
out
Rcpp::sourceCpp('sampleEs2.cpp')
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq,type=0)
out
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq,type=1)
out
Rcpp::sourceCpp('sampleEs2.cpp')
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq,type=1)
out
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq,type=0)
out
out=sampleEmpty2(mcerror=0.001,UqC=UqC,coef=coef,seq=seq,type=1)
out
sample.empty<- function(UqC,N,colnumber){
if(missing(UqC)) {ncol=colnumber;ext=NULL} else
{
ncol <- ncol(UqC)
ext <- apply(UqC,1,function (x)
{
sum(x*2^((ncol-1):0))
}
)
}
temp.N=0
sample.now <- NULL
out <- NULL
while (temp.N < N)
{
temp <-  matrix(sample(2,10000*ncol,replace=TRUE)-1,ncol=ncol)
if (is.null(ext)) out <- rbind(out,temp) else
{
sample.now <-apply(temp,1,function(x) sum(x*2^((ncol-1):0)))
out <- rbind(out,temp[!sample.now%in%ext,])
}
temp.N = temp.N + nrow(out)
}
out
}
t=sample.empty(UqC=UqC,N=(0.5/0.001)^2)
nrow(t)
0.5/0.001
(0.5/0.001)^2
sample.empty<- function(UqC,N,colnumber){
if(missing(UqC)) {ncol=colnumber;ext=NULL} else
{
ncol <- ncol(UqC)
ext <- apply(UqC,1,function (x)
{
sum(x*2^((ncol-1):0))
}
)
}
temp.N=0
sample.now <- NULL
out <- NULL
while (temp.N < N)
{
temp <-  matrix(sample(2,10000*ncol,replace=TRUE)-1,ncol=ncol)
if (is.null(ext)) out <- rbind(out,temp) else
{
sample.now <-apply(temp,1,function(x) sum(x*2^((ncol-1):0)))
out <- rbind(out,temp[!sample.now%in%ext,])
}
temp.N =nrow(out)
}
out
}
t=sample.empty(UqC=UqC,N=(0.5/0.001)^2)
head(t)
tail(t)
tail(t)
t=sample.empty(UqC=UqC,N=(0.5/0.0001)^2)
head(t)
tail(t)
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
require(Rcpp)
cfiles = paste("Cpp/",list.files("Cpp/"),sep="")
Rfiles = paste("R/",list.files("R/"),sep="")
packageName="BayDR"
verNo=2.2
system(paste("rm -rf",packageName))
#  delete the original bayDR folder
Rcpp.package.skeleton(name=packageName,cpp_files=cfiles,code_files=Rfiles,author="YL",
example_code=FALSE,email="yunlong.nie@stat.ubc.ca")
require(roxygen2)
roxygenise(package.dir="BayDR",overwrite=TRUE) # wirte some in the C++ files too, like in the DatDen_X_C
# add useDynLib(BayDR) at the end of NAMESPACE
system(paste("cp -r data ",paste0(packageName,"/")))
sink(file=paste0(packageName,"/NAMESPACE"),append=TRUE)
cat("useDynLib(",packageName,")",sep="")
sink()
file.copy(from="DESCRIPTION",to=paste0(packageName,"/"),overwrite=TRUE)
desp= readLines(con=paste0(packageName,"/","DESCRIPTION"))
desp[4] = paste("Version: ", verNo)
writeLines(desp,con=paste0(packageName,"/","DESCRIPTION"))
system(paste("R CMD build",packageName))
filenames = list.files("~/Dropbox/UBC/CinR/FileOnSever/Mypackages/Import/")
system(paste("R CMD check",filenames[grep(as.character(verNo),filenames)]))
system(paste("R CMD install",filenames[grep(as.character(verNo),filenames)]))
data(sampleDat)
Y=sample.dataset$Y
X=sample.dataset$X
C=sample.dataset$C
Y=Dat$Y;X=Dat$X;C=Dat[,paste0("C",1:(ncol(Dat)-2))]}
k_q=1
mean=c(0.01,0.99)
con=c(1,20)
BinMean=20
BinCon=20
beta=30^2*diag(rep(1,ncol(C)+2))
Mc.error=0.001
kappa=0.5
addBin=c(0,10)
liketype="bernoulli"
temp.p = para.est(Y,X,C,beta=beta,k_q=k_q,Mc.error=Mc.error)
estimate.p = temp.p$P
require(BayDR)
temp.p = para.est(Y,X,C,beta=beta,k_q=k_q,Mc.error=Mc.error)
estimate.p = temp.p$P
likelihood.p=temp.p$likelihood
temp.s0 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[1],liketype=liketype)
likelihood0 = temp.s0$likelihood.new
estimate.s0 = temp.s0$est.new
ratio.likelihood0<- exp(likelihood0 - likelihood.p)
w0 <- kappa/(kappa+(1-kappa)*ratio.likelihood0)
estimate.b0 <- w0*estimate.p+(1-w0)*estimate.s0 # bayesian estimate for hirarchical version
temp.s1 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[2],liketype=liketype)
likelihood1 = temp.s1$likelihood.new
estimate.s1 = temp.s1$est.new
ratio.likelihood1<- exp(likelihood1 - likelihood.p)
w1 <- kappa/(kappa+(1-kappa)*ratio.likelihood1)
estimate.b1 <- w1*estimate.p+(1-w1)*estimate.s1 # bayesian estimate for hirarchical version
list(est=c(S0=estimate.s0,
P=estimate.p,
B0=estimate.b0,
S1=estimate.s1,
B1=estimate.b1
),
likelihood=c(l.p=likelihood.p,l.S0=likelihood0,l.S1=likelihood1)
)
sat2 <- function(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin,kappa,beta,Mc.error,liketype,Dat)
{
if (missing(Y)|missing(X)|missing(C)) {Y=Dat$Y;X=Dat$X;C=Dat[,paste0("C",1:(ncol(Dat)-2))]}
if (missing(Dat)&(missing(Y)|missing(X)|missing(C))) stop("Data entry wrong Y or X or C or Dat is missing")
if (missing(k_q)) k_q=1
if (missing(mean)) mean=c(0.01,0.99)
if (missing(con)) con=c(1,20)
if (missing(BinMean)) BinMean=20
if (missing(BinCon)) BinCon=20
if (missing(beta)) beta=30^2*diag(rep(1,ncol(C)+2))
if (missing(Mc.error)) Mc.error=0.001
if (missing(kappa)) kappa=0.5
if (missing(addBin)) addBin=c(0,10)
if (missing(liketype)) liketype="bernoulli"
temp.p = para.est(Y,X,C,beta=beta,k_q=k_q,Mc.error=Mc.error)
estimate.p = temp.p$P
likelihood.p=temp.p$likelihood
temp.s0 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[1],liketype=liketype)
likelihood0 = temp.s0$likelihood.new
estimate.s0 = temp.s0$est.new
ratio.likelihood0<- exp(likelihood0 - likelihood.p)
w0 <- kappa/(kappa+(1-kappa)*ratio.likelihood0)
estimate.b0 <- w0*estimate.p+(1-w0)*estimate.s0 # bayesian estimate for hirarchical version
temp.s1 <- sat.est.new(Y,X,C,k_q,mean,BinMean,con,BinCon,addBin=addBin[2],liketype=liketype)
likelihood1 = temp.s1$likelihood.new
estimate.s1 = temp.s1$est.new
ratio.likelihood1<- exp(likelihood1 - likelihood.p)
w1 <- kappa/(kappa+(1-kappa)*ratio.likelihood1)
estimate.b1 <- w1*estimate.p+(1-w1)*estimate.s1 # bayesian estimate for hirarchical version
return(
list(est=c(S0=estimate.s0,
P=estimate.p,
B0=estimate.b0,
S1=estimate.s1,
B1=estimate.b1
),
likelihood=c(l.p=likelihood.p,l.S0=likelihood0,l.S1=likelihood1)
)
)
}
sat2(Y,X,C)
