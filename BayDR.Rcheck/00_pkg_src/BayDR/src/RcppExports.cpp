// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ApplyCSold
NumericVector ApplyCSold(NumericMatrix Number, double kq, double levelCon, double noObs, double a1, double b1, double a0, double b0);
RcppExport SEXP BayDR_ApplyCSold(SEXP NumberSEXP, SEXP kqSEXP, SEXP levelConSEXP, SEXP noObsSEXP, SEXP a1SEXP, SEXP b1SEXP, SEXP a0SEXP, SEXP b0SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix Number = Rcpp::as<NumericMatrix >(NumberSEXP);
    double kq = Rcpp::as<double >(kqSEXP);
    double levelCon = Rcpp::as<double >(levelConSEXP);
    double noObs = Rcpp::as<double >(noObsSEXP);
    double a1 = Rcpp::as<double >(a1SEXP);
    double b1 = Rcpp::as<double >(b1SEXP);
    double a0 = Rcpp::as<double >(a0SEXP);
    double b0 = Rcpp::as<double >(b0SEXP);
    NumericVector __result = ApplyCSold(Number, kq, levelCon, noObs, a1, b1, a0, b0);
    return Rcpp::wrap(__result);
END_RCPP
}
// ApplyCSoldhood
NumericVector ApplyCSoldhood(NumericMatrix Number, double a1, double b1, double a0, double b0);
RcppExport SEXP BayDR_ApplyCSoldhood(SEXP NumberSEXP, SEXP a1SEXP, SEXP b1SEXP, SEXP a0SEXP, SEXP b0SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix Number = Rcpp::as<NumericMatrix >(NumberSEXP);
    double a1 = Rcpp::as<double >(a1SEXP);
    double b1 = Rcpp::as<double >(b1SEXP);
    double a0 = Rcpp::as<double >(a0SEXP);
    double b0 = Rcpp::as<double >(b0SEXP);
    NumericVector __result = ApplyCSoldhood(Number, a1, b1, a0, b0);
    return Rcpp::wrap(__result);
END_RCPP
}
// CauEstC
double CauEstC(double mcerror, double gamma0, double gamma1, double gamma2, double lambda1, double lambda2, int r, int K, double mean34);
RcppExport SEXP BayDR_CauEstC(SEXP mcerrorSEXP, SEXP gamma0SEXP, SEXP gamma1SEXP, SEXP gamma2SEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP rSEXP, SEXP KSEXP, SEXP mean34SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    double mcerror = Rcpp::as<double >(mcerrorSEXP);
    double gamma0 = Rcpp::as<double >(gamma0SEXP);
    double gamma1 = Rcpp::as<double >(gamma1SEXP);
    double gamma2 = Rcpp::as<double >(gamma2SEXP);
    double lambda1 = Rcpp::as<double >(lambda1SEXP);
    double lambda2 = Rcpp::as<double >(lambda2SEXP);
    int r = Rcpp::as<int >(rSEXP);
    int K = Rcpp::as<int >(KSEXP);
    double mean34 = Rcpp::as<double >(mean34SEXP);
    double __result = CauEstC(mcerror, gamma0, gamma1, gamma2, lambda1, lambda2, r, K, mean34);
    return Rcpp::wrap(__result);
END_RCPP
}
// Comb_C
NumericVector Comb_C(NumericMatrix Comb, NumericMatrix Number);
RcppExport SEXP BayDR_Comb_C(SEXP CombSEXP, SEXP NumberSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix Comb = Rcpp::as<NumericMatrix >(CombSEXP);
    NumericMatrix Number = Rcpp::as<NumericMatrix >(NumberSEXP);
    NumericVector __result = Comb_C(Comb, Number);
    return Rcpp::wrap(__result);
END_RCPP
}
// DatDen_X_C
List DatDen_X_C(NumericMatrix C, double phi0, double phi1, double phi2, double lambda1, double lambda2, int K, NumericVector No123, NumericVector No1, NumericVector No2, NumericVector No34, double Mean34);
RcppExport SEXP BayDR_DatDen_X_C(SEXP CSEXP, SEXP phi0SEXP, SEXP phi1SEXP, SEXP phi2SEXP, SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP KSEXP, SEXP No123SEXP, SEXP No1SEXP, SEXP No2SEXP, SEXP No34SEXP, SEXP Mean34SEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix C = Rcpp::as<NumericMatrix >(CSEXP);
    double phi0 = Rcpp::as<double >(phi0SEXP);
    double phi1 = Rcpp::as<double >(phi1SEXP);
    double phi2 = Rcpp::as<double >(phi2SEXP);
    double lambda1 = Rcpp::as<double >(lambda1SEXP);
    double lambda2 = Rcpp::as<double >(lambda2SEXP);
    int K = Rcpp::as<int >(KSEXP);
    NumericVector No123 = Rcpp::as<NumericVector >(No123SEXP);
    NumericVector No1 = Rcpp::as<NumericVector >(No1SEXP);
    NumericVector No2 = Rcpp::as<NumericVector >(No2SEXP);
    NumericVector No34 = Rcpp::as<NumericVector >(No34SEXP);
    double Mean34 = Rcpp::as<double >(Mean34SEXP);
    List __result = DatDen_X_C(C, phi0, phi1, phi2, lambda1, lambda2, K, No123, No1, No2, No34, Mean34);
    return Rcpp::wrap(__result);
END_RCPP
}
// EstS_C
NumericVector EstS_C(NumericMatrix Comb1, NumericMatrix Comb0, NumericMatrix Number, int kq, int levelC, int N);
RcppExport SEXP BayDR_EstS_C(SEXP Comb1SEXP, SEXP Comb0SEXP, SEXP NumberSEXP, SEXP kqSEXP, SEXP levelCSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix Comb1 = Rcpp::as<NumericMatrix >(Comb1SEXP);
    NumericMatrix Comb0 = Rcpp::as<NumericMatrix >(Comb0SEXP);
    NumericMatrix Number = Rcpp::as<NumericMatrix >(NumberSEXP);
    int kq = Rcpp::as<int >(kqSEXP);
    int levelC = Rcpp::as<int >(levelCSEXP);
    int N = Rcpp::as<int >(NSEXP);
    NumericVector __result = EstS_C(Comb1, Comb0, Number, kq, levelC, N);
    return Rcpp::wrap(__result);
END_RCPP
}
// Like_C
double Like_C(NumericMatrix Comb1, NumericMatrix Comb0, NumericMatrix Number);
RcppExport SEXP BayDR_Like_C(SEXP Comb1SEXP, SEXP Comb0SEXP, SEXP NumberSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix Comb1 = Rcpp::as<NumericMatrix >(Comb1SEXP);
    NumericMatrix Comb0 = Rcpp::as<NumericMatrix >(Comb0SEXP);
    NumericMatrix Number = Rcpp::as<NumericMatrix >(NumberSEXP);
    double __result = Like_C(Comb1, Comb0, Number);
    return Rcpp::wrap(__result);
END_RCPP
}
// Like_CBin
double Like_CBin(NumericMatrix Comb1, NumericMatrix Comb0, NumericMatrix Number);
RcppExport SEXP BayDR_Like_CBin(SEXP Comb1SEXP, SEXP Comb0SEXP, SEXP NumberSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix Comb1 = Rcpp::as<NumericMatrix >(Comb1SEXP);
    NumericMatrix Comb0 = Rcpp::as<NumericMatrix >(Comb0SEXP);
    NumericMatrix Number = Rcpp::as<NumericMatrix >(NumberSEXP);
    double __result = Like_CBin(Comb1, Comb0, Number);
    return Rcpp::wrap(__result);
END_RCPP
}
// NewComb_C
List NewComb_C(NumericMatrix Add, NumericVector weight, int Addbin, double intMean, double intCon);
RcppExport SEXP BayDR_NewComb_C(SEXP AddSEXP, SEXP weightSEXP, SEXP AddbinSEXP, SEXP intMeanSEXP, SEXP intConSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    NumericMatrix Add = Rcpp::as<NumericMatrix >(AddSEXP);
    NumericVector weight = Rcpp::as<NumericVector >(weightSEXP);
    int Addbin = Rcpp::as<int >(AddbinSEXP);
    double intMean = Rcpp::as<double >(intMeanSEXP);
    double intCon = Rcpp::as<double >(intConSEXP);
    List __result = NewComb_C(Add, weight, Addbin, intMean, intCon);
    return Rcpp::wrap(__result);
END_RCPP
}
